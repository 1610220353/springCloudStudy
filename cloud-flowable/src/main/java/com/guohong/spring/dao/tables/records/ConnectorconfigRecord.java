/*
 * This file is generated by jOOQ.
 */
package com.guohong.spring.dao.tables.records;


import com.guohong.spring.dao.tables.Connectorconfig;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Table stores connector general configuration
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConnectorconfigRecord extends UpdatableRecordImpl<ConnectorconfigRecord> implements Record13<String, Timestamp, Timestamp, String, String, String, String, String, Object, String, String, String, String> {

    private static final long serialVersionUID = -1290257299;

    /**
     * Setter for <code>public.ConnectorConfig.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.ConnectorConfig.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.ConnectorConfig.createdOn</code>.
     */
    public void setCreatedon(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.ConnectorConfig.createdOn</code>.
     */
    public Timestamp getCreatedon() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>public.ConnectorConfig.modifiedOn</code>.
     */
    public void setModifiedon(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.ConnectorConfig.modifiedOn</code>.
     */
    public Timestamp getModifiedon() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>public.ConnectorConfig.tenantId</code>.
     */
    public void setTenantid(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.ConnectorConfig.tenantId</code>.
     */
    public String getTenantid() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.ConnectorConfig.groupId</code>.
     */
    public void setGroupid(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.ConnectorConfig.groupId</code>.
     */
    public String getGroupid() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.ConnectorConfig.code</code>.
     */
    public void setCode(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.ConnectorConfig.code</code>.
     */
    public String getCode() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.ConnectorConfig.name</code>.
     */
    public void setName(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.ConnectorConfig.name</code>.
     */
    public String getName() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.ConnectorConfig.description</code>.
     */
    public void setDescription(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.ConnectorConfig.description</code>.
     */
    public String getDescription() {
        return (String) get(7);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public void setConfig(Object value) {
        set(8, value);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public Object getConfig() {
        return get(8);
    }

    /**
     * Setter for <code>public.ConnectorConfig.connectorType</code>.
     */
    public void setConnectortype(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.ConnectorConfig.connectorType</code>.
     */
    public String getConnectortype() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.ConnectorConfig.loadingId</code>.
     */
    public void setLoadingid(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.ConnectorConfig.loadingId</code>.
     */
    public String getLoadingid() {
        return (String) get(10);
    }

    /**
     * Setter for <code>public.ConnectorConfig.status</code>.
     */
    public void setStatus(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.ConnectorConfig.status</code>.
     */
    public String getStatus() {
        return (String) get(11);
    }

    /**
     * Setter for <code>public.ConnectorConfig.udObjectType</code>.
     */
    public void setUdobjecttype(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.ConnectorConfig.udObjectType</code>.
     */
    public String getUdobjecttype() {
        return (String) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<String, Timestamp, Timestamp, String, String, String, String, String, Object, String, String, String, String> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<String, Timestamp, Timestamp, String, String, String, String, String, Object, String, String, String, String> valuesRow() {
        return (Row13) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Connectorconfig.CONNECTORCONFIG.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return Connectorconfig.CONNECTORCONFIG.CREATEDON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return Connectorconfig.CONNECTORCONFIG.MODIFIEDON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Connectorconfig.CONNECTORCONFIG.TENANTID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Connectorconfig.CONNECTORCONFIG.GROUPID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Connectorconfig.CONNECTORCONFIG.CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Connectorconfig.CONNECTORCONFIG.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Connectorconfig.CONNECTORCONFIG.DESCRIPTION;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Field<Object> field9() {
        return Connectorconfig.CONNECTORCONFIG.CONFIG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return Connectorconfig.CONNECTORCONFIG.CONNECTORTYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return Connectorconfig.CONNECTORCONFIG.LOADINGID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return Connectorconfig.CONNECTORCONFIG.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return Connectorconfig.CONNECTORCONFIG.UDOBJECTTYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component2() {
        return getCreatedon();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getModifiedon();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getTenantid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getGroupid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getDescription();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object component9() {
        return getConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getConnectortype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getLoadingid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component12() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getUdobjecttype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getCreatedon();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getModifiedon();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getTenantid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getGroupid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getDescription();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object value9() {
        return getConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getConnectortype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getLoadingid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getUdobjecttype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConnectorconfigRecord value1(String value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConnectorconfigRecord value2(Timestamp value) {
        setCreatedon(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConnectorconfigRecord value3(Timestamp value) {
        setModifiedon(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConnectorconfigRecord value4(String value) {
        setTenantid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConnectorconfigRecord value5(String value) {
        setGroupid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConnectorconfigRecord value6(String value) {
        setCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConnectorconfigRecord value7(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConnectorconfigRecord value8(String value) {
        setDescription(value);
        return this;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public ConnectorconfigRecord value9(Object value) {
        setConfig(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConnectorconfigRecord value10(String value) {
        setConnectortype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConnectorconfigRecord value11(String value) {
        setLoadingid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConnectorconfigRecord value12(String value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConnectorconfigRecord value13(String value) {
        setUdobjecttype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConnectorconfigRecord values(String value1, Timestamp value2, Timestamp value3, String value4, String value5, String value6, String value7, String value8, Object value9, String value10, String value11, String value12, String value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ConnectorconfigRecord
     */
    public ConnectorconfigRecord() {
        super(Connectorconfig.CONNECTORCONFIG);
    }

    /**
     * Create a detached, initialised ConnectorconfigRecord
     */
    public ConnectorconfigRecord(String id, Timestamp createdon, Timestamp modifiedon, String tenantid, String groupid, String code, String name, String description, Object config, String connectortype, String loadingid, String status, String udobjecttype) {
        super(Connectorconfig.CONNECTORCONFIG);

        set(0, id);
        set(1, createdon);
        set(2, modifiedon);
        set(3, tenantid);
        set(4, groupid);
        set(5, code);
        set(6, name);
        set(7, description);
        set(8, config);
        set(9, connectortype);
        set(10, loadingid);
        set(11, status);
        set(12, udobjecttype);
    }
}
